# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'a0.0.0.1.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QMessageBox,QInputDialog,QFileDialog
import sys,os,json
from tkinter import filedialog
class Ui_MainWindow(QMainWindow):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.baseSetting = QtWidgets.QFrame(self.centralwidget)
        self.baseSetting.setGeometry(QtCore.QRect(30, 10, 321, 261))
        self.baseSetting.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.baseSetting.setFrameShadow(QtWidgets.QFrame.Raised)
        self.baseSetting.setObjectName("baseSetting")
        self.baseSetting_DatapackName = QtWidgets.QLabel(self.baseSetting)
        self.baseSetting_DatapackName.setGeometry(QtCore.QRect(10, 40, 61, 16))
        self.baseSetting_DatapackName.setObjectName("baseSetting_DatapackName")
        self.baseSetting_Title = QtWidgets.QLabel(self.baseSetting)
        self.baseSetting_Title.setGeometry(QtCore.QRect(130, 10, 51, 16))
        self.baseSetting_Title.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.baseSetting_Title.setObjectName("baseSetting_Title")
        self.baseSetting_DatapackVersion = QtWidgets.QLabel(self.baseSetting)
        self.baseSetting_DatapackVersion.setGeometry(QtCore.QRect(10, 70, 61, 16))
        self.baseSetting_DatapackVersion.setObjectName("baseSetting_DatapackVersion")
        self.baseSetting_DatapackNameInput = QtWidgets.QLineEdit(self.baseSetting)
        self.baseSetting_DatapackNameInput.setGeometry(QtCore.QRect(80, 40, 211, 20))
        self.baseSetting_DatapackNameInput.setObjectName("baseSetting_DatapackNameInput")
        self.baseSetting_DatapackVersionSelected = QtWidgets.QComboBox(self.baseSetting)
        self.baseSetting_DatapackVersionSelected.setGeometry(QtCore.QRect(80, 70, 211, 22))
        self.baseSetting_DatapackVersionSelected.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.baseSetting_DatapackVersionSelected.setObjectName("baseSetting_DatapackVersionSelected")
        self.baseSetting_DatapackVersionSelected.addItem("")
        self.baseSetting_DatapackVersionSelected.addItem("")
        self.baseSetting_DatapackVersionSelected.addItem("")
        self.baseSetting_DatapackVersionSelected.addItem("")
        self.baseSetting_DatapackVersionSelected.addItem("")
        self.baseSetting_DatapackVersionSelected.addItem("")
        self.baseSetting_DatapackVersionSelected.addItem("")
        self.baseSetting_DatapackVersionSelected.addItem("")
        self.baseSetting_DatapackVersionSelected.addItem("")
        self.baseSetting_DatapackVersionSelected.addItem("")
        self.baseSetting_DatapackDescriptionText = QtWidgets.QLabel(self.baseSetting)
        self.baseSetting_DatapackDescriptionText.setGeometry(QtCore.QRect(10, 100, 171, 16))
        self.baseSetting_DatapackDescriptionText.setObjectName("baseSetting_DatapackDescriptionText")
        self.baseSetting_FormatCodeWikiLinkButton = QtWidgets.QPushButton(self.baseSetting)
        self.baseSetting_FormatCodeWikiLinkButton.setGeometry(QtCore.QRect(190, 100, 111, 23))
        self.baseSetting_FormatCodeWikiLinkButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.baseSetting_FormatCodeWikiLinkButton.setObjectName("baseSetting_FormatCodeWikiLinkButton")
        self.baseSetting_DatapackDescriptionInput = QtWidgets.QTextEdit(self.baseSetting)
        self.baseSetting_DatapackDescriptionInput.setGeometry(QtCore.QRect(10, 130, 291, 91))
        self.baseSetting_DatapackDescriptionInput.setObjectName("baseSetting_DatapackDescriptionInput")
        self.baseSetting_SaveButton = QtWidgets.QPushButton(self.baseSetting)
        self.baseSetting_SaveButton.setGeometry(QtCore.QRect(110, 230, 75, 23))
        self.baseSetting_SaveButton.setObjectName("baseSetting_SaveButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 23))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.newDatapack = QtWidgets.QAction(MainWindow)
        self.newDatapack.setObjectName("newDatapack")
        self.openDatapack = QtWidgets.QAction(MainWindow)
        self.openDatapack.setObjectName("openDatapack")
        self.menu.addAction(self.newDatapack)
        self.menu.addAction(self.openDatapack)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        #功能实现




    def saveBaseSetting(self):
        global datapackDir,namespace,version,description
        if datapackDir == "None" and datapackDir:
            QMessageBox.critical(self, "错误", "您没有选择数据包目录，请选择数据包目录！")
            self.newDatapackFunc()
        namespace=self.baseSetting_DatapackNameInput.text()
        version=self.baseSetting_DatapackVersionSelected.currentIndex()+3
        description=self.baseSetting_DatapackDescriptionInput.toPlainText()
        if os.path.exists(datapackDir+"/pack.mcmeta"):
            pass
        else:
            os.mkdir(datapackDir+"/"+namespace)
        with open(datapackDir+"/pack.mcmeta",encoding="utf-8",mode="w+") as f:
            packMcmeta={
                "pack":{
                    "pack_format":int(version),
                    "description":description
                }
            }
            f.write(json.dumps(packMcmeta,ensure_ascii=False))
        print("update pack.mcmeta succ")
        QMessageBox.information(self,"信息","pack.mcmeta文件已更新")
        file = datapackDir+"/pack.mcmeta"
        file = os.path.realpath(file)
        #print(file)
        os.system(f'explorer /select, {file}')

    def newDatapackFunc(self):
        global datapackDir
        datapackDir=QFileDialog.getExistingDirectory(caption="新建数据包",directory="./")
        print("get datapack dir succ ",datapackDir)
    def openDatapackFunc(self):
        global datapackDir
        datapackDir=QFileDialog.getExistingDirectory(caption="打开数据包",directory="./")
        if os.path.exists(datapackDir+"/pack.mcmeta") == False:
            QMessageBox.critical(self, "错误", "您选择的目录不为数据包根目录，将新建数据包")
        print("get datapack dir succ ",datapackDir)
    def linkFormatCode(self):
        os.popen("start start https://minecraft.fandom.com/zh/wiki/%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%BB%A3%E7%A0%81 && exit")




    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "数据包生成器 a0.0.0.1 By Bi2Nb9O3 & ChenMoM"))
        self.baseSetting_DatapackName.setText(_translate("MainWindow", "命名空间"))
        self.baseSetting_Title.setText(_translate("MainWindow", "基本设置"))
        self.baseSetting_DatapackVersion.setText(_translate("MainWindow", "数据包版本"))
        self.baseSetting_DatapackVersionSelected.setItemText(0, _translate("MainWindow", "3  1.13 (17w43a~17w47b)"))
        self.baseSetting_DatapackVersionSelected.setItemText(1, _translate("MainWindow", "4  1.13（17w48a）~ 1.14.4（19w46b） "))
        self.baseSetting_DatapackVersionSelected.setItemText(2, _translate("MainWindow", "5  1.15（1.15-pre1）~ 1.16.1（1.16.2-pre3） "))
        self.baseSetting_DatapackVersionSelected.setItemText(3, _translate("MainWindow", "6  1.16.2（1.16.2-rc1）~ 1.16.5（20w45a） "))
        self.baseSetting_DatapackVersionSelected.setItemText(4, _translate("MainWindow", "7  1.17（20w46a）~ 1.17.1（1.18-exp7） "))
        self.baseSetting_DatapackVersionSelected.setItemText(5, _translate("MainWindow", "8  1.18（21w37a）~ 1.18.1（22w07a） "))
        self.baseSetting_DatapackVersionSelected.setItemText(6, _translate("MainWindow", "9  1.18.2（1.18.2-pre1 ~ 正式版） "))
        self.baseSetting_DatapackVersionSelected.setItemText(7, _translate("MainWindow", "10 1.19（22w11a）~ 1.19.3"))
        self.baseSetting_DatapackVersionSelected.setItemText(8, _translate("MainWindow", "11 1.19.4快照23w03a ~ 23w05a"))
        self.baseSetting_DatapackVersionSelected.setItemText(9, _translate("MainWindow", "12 1.19.4（23w06a）及以上 "))
        self.baseSetting_DatapackDescriptionText.setText(_translate("MainWindow", "数据包介绍（支持）格式化代码"))
        self.baseSetting_FormatCodeWikiLinkButton.setText(_translate("MainWindow", "格式化代码wiki"))
        self.baseSetting_SaveButton.setText(_translate("MainWindow", "保存"))
        self.menu.setTitle(_translate("MainWindow", "文件"))
        self.menu_2.setTitle(_translate("MainWindow", "编辑"))
        self.newDatapack.setText(_translate("MainWindow", "新建数据包"))
        self.openDatapack.setText(_translate("MainWindow", "打开数据包"))

        #功能链接
        self.baseSetting_FormatCodeWikiLinkButton.clicked.connect(self.linkFormatCode)
        self.newDatapack.triggered.connect(self.newDatapackFunc)
        self.openDatapack.triggered.connect(self.openDatapackFunc)
        self.baseSetting_SaveButton.clicked.connect(self.saveBaseSetting)

if __name__ == "__main__":
    datapackDir="None"
    QtCore.QCoreApplication.setAttribute(QtCore.Qt.AA_EnableHighDpiScaling)
    app = QtWidgets.QApplication(sys.argv) # 创建一个QApplication，也就是你要开发的软件app 
    MainWindow = QtWidgets.QMainWindow() # 创建一个QMainWindow，用来装载你需要的各种组件、控件 
    ui = Ui_MainWindow() # ui是Ui_MainWindow()类的实例化对象 
    ui.setupUi(MainWindow) # 执行类中的setupUi方法，方法的参数是第二步中创建的QMainWindow 
    MainWindow.show() # 执行QMainWindow的show()方法，显示这个QMainWindow 
    sys.exit(app.exec_()) # 使用exit()或者点击关闭按钮退出QApplicat
